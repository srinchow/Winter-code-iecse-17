
#include<bits/stdc++.h>
using namespace std;

bool vis[30][30];

void init()
{ for(int i=0;i<30;i++)
     for(int j=0;j<30;j++)
         vis[i][j]=false;

}
 
 

void floodFillUtil(int screen[][30], int x, int y, int prevC, int newC,int n)
{
    
    if (x < 0 || x >= n || y < 0 || y >= n)
        return;
    if (screen[x][y] != prevC)
        return;
    if(vis[x][y])
         return; 
    
    
    screen[x][y] = newC;
    vis[x][y]=true;
    
    floodFillUtil(screen, x+1, y, prevC, newC,n);
    floodFillUtil(screen, x-1, y, prevC, newC,n);
    floodFillUtil(screen, x, y+1, prevC, newC,n);
    floodFillUtil(screen, x, y-1, prevC, newC,n);
    floodFillUtil(screen, x+1, y+1, prevC, newC,n);
    floodFillUtil(screen, x+1, y-1, prevC, newC,n);
    floodFillUtil(screen, x-1, y-1, prevC, newC,n);
    floodFillUtil(screen, x-1, y+1, prevC, newC,n);
    
}
 

void floodFill(int screen[][30], int x, int y, int newC,int n)
{
    int prevC = screen[x][y];
    floodFillUtil(screen, x, y, prevC, newC,n);
}
 

int main()
{int t;
 cin>>t;
 
 while(t--)
 {  int n,x,y,newC;
  cin>>n>>x>>y>>newC;
  int screen[30][30];
  
   for (int i=0; i<n; i++)
    {
        for (int j=0; j<n; j++)
           cin>>screen[i][j];
    }

 /*  for (int i=0; i<n; i++)
    {
        for (int j=0; j<n; j++)
           cout<<screen[i][j]<<" ";
       cout<<endl;
    }
*/
  
     
  
    init(); 
    floodFill(screen, x, y, newC,n);
 
   
    for (int i=0; i<n; i++)
    {
        for (int j=0; j<n; j++)
           cout << screen[i][j] << " ";
        cout << endl;
    }
}
 
 return 0;
}
